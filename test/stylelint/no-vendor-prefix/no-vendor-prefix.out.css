a {
  display: flex;
  flex-flow: row;
  order: 0;
  flex: 0 1 2;
  transition: flex 200ms;
}

.inline {
  display: inline-flex;
  align-self: auto;
  align-content: stretch;
  flex: auto;
}

.inline-box {
  display: inline-flex;
}

.inline-flex {
  display: inline-flex;
}

.inline-flexbox {
  display: inline-flex;
}

.a {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: flex-start;
  flex-wrap: nowrap;
  align-content: flex-start;
  align-self: flex-start;
  flex: none;
}

.display_flex {
  display: flex;
}

.display_box {
  display: flex;
}

.display_flexbox {
  display: flex;
}

.b {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-end;
  align-items: flex-end;
  flex-wrap: wrap;
  align-content: flex-end;
  align-self: flex-end;
  flex-shrink: 1;
}

.c {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex-wrap: reverse-wrap;
  align-content: center;
  align-self: center;
  flex-basis: auto;
}

.e {
  display: flex;
  flex-direction: column-reverse;
  justify-content: space-between;
  align-items: baseline;
  align-content: space-between;
  align-self: baseline;
}

.f {
  display: flex;
  justify-content: space-around;
  align-items: stretch;
  align-content: space-around;
  align-self: stretch;
}

.g {
  display: flex;
  flex: calc(1em + 1px) 0 0;
}

.h {
  flex-flow: column wrap;
}

.i {
  flex-flow: nowrap;
}

.inherit {
  order: inherit;
}

a {
  background: linear-gradient(350.5deg, white, black), linear-gradient(-130deg, black, white), linear-gradient(45deg, black, white);
}

b {
  background-image: linear-gradient(rgba(0, 0, 0, 1), white), linear-gradient(white, black);
}

strong {
  background: linear-gradient(to top, transparent, rgba(0, 0, 0, 0.8) 20px, #000 30px, #000) no-repeat;
}

div {
  background-image: radial-gradient(to left, white, black), repeating-linear-gradient(to bottom right, black, white), repeating-radial-gradient(to top, aqua, red);
}

.radial {
  background: radial-gradient(ellipse farthest-corner, black, white);
}

.simple1 {
  background: linear-gradient(black, white);
}

.simple2 {
  background: linear-gradient(to left, black 0%, rgba(0, 0, 0, 0.5)50%, white 100%);
}

.simple3 {
  background: linear-gradient(to left, black 50%, white 100%);
}

.simple4 {
  background: linear-gradient(to right top, black, white);
}

.direction {
  background: linear-gradient(top left, black, rgba(0, 0, 0, 0.5), white);
}

.silent {
  background: linear-gradient(to bottom right, black, white);
}

.radial {
  background: radial-gradient(farthest-side at 0 50%, white, black);
}

.second {
  background: red linear-gradient(red, blue);
  background: url('logo.png'), linear-gradient(#fff, #000);
}

.px {
  background: linear-gradient(black 0, white 100px);
}

.list {
  list-style-image: linear-gradient(white, black);
}

.mask1 {
  mask: linear-gradient(white, black);
}

.mask2 {
  mask: linear-gradient(white, black);
}

.mask3 {
  mask: linear-gradient(white, black);
}

.newline_old {
  background-image: linear-gradient(white, black), linear-gradient(black, white);
}

.newline {
  background-image: linear-gradient(white, black), linear-gradient(black, white);
}

.convert_old {
  background: linear-gradient(270deg, white, black);
}

.convert {
  background: linear-gradient(to left, white, black);
}

.rad {
  background: linear-gradient(57.296deg, white, black);
}

.turn {
  background: linear-gradient(108deg, white, black);
}

.norm {
  background: linear-gradient(to left, white, black);
}

.foo {
  --widthA: 100px;
  --widthB: calc(var(--widthA) / 2);
  --widthC: calc(var(--widthB) / 2);
  width: var(--widthC);
}

div {
  width: calc(100% - 1em);
}

input::placeholder {
}

:fullscreen a {
}

@media (min-resolution: 1dppx) {
}

@media (min--mox-device-pixel-ratio: 1) {
}

@media (max-resolution: 1dppx) {
}

@keyframes  {
  0% {
    top: 0;
  }
}

@viewport {
  orientation: landscape;
}
